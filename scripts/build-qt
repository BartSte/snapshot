#!/usr/bin/env bash
set -euo pipefail

this_dir="$(cd "$(dirname "${BASH_SOURCE[0]}")" >/dev/null 2>&1 && pwd)"
root="$(dirname "$this_dir")"
static=true
shared=false
use_pch=-no-pch
source_dir="$root/Qt"
install_dir="$root/3rdparty/Qt"
ffmpeg_dir="$root/3rdparty/ffmpeg"
usage="Usage: build-qt [--static] [--shared]

Build Qt with static or shared linking.

Options:
    --static            Build Qt with static linking (default=true)
    --shared            Download precompiled share libraries (default=false)
    --shared-build      Build Qt with shared linking (default=false)
    --use-pch           Use precompiled headers (default=false)
    --ffmpeg-dir        Path to ffmpeg (default=$ffmpeg_dir)
    --submodules        List of submodules to build (default=qtbase,qtmultimedia,qtwayland)
    -s, --source-dir    Qt source directory (default=$source_dir)
    -i, --install-dir   Qt build directory (default=$install_dir)"

while [[ $# -gt 0 ]]; do
    key="$1"
    case $key in
    --static)
        echo "Qt will be built with static linking"
        static=true
        shared=false
        shared_build=false
        shift
        ;;
    --shared)
        echo "Qt will be built with shared linking"
        static=false
        shared=true
        shared_build=false
        shift
        ;;
    --shared-build)
        echo "Qt will be built with shared linking"
        static=false
        shared=false
        shared_build=true
        shift
        ;;
    --use-pch)
        echo "Qt will be built with precompiled headers"
        use_pch=-pch
        shift
        ;;
    --submodules)
        submodules="$2"
        shift
        shift
        ;;
    -s | --source-dir)
        source_dir="$2"
        shift
        shift
        ;;
    -i | --install-dir)
        install_dir="$2"
        shift
        shift
        ;;
    --ffmpeg-dir)
        ffmpeg_dir="$2"
        shift
        shift
        ;;
    -h | --help)
        echo "$usage"
        exit 0
        ;;
    *)
        echo "Unknown option: $key"
        echo "$usage"
        exit 1
        ;;
    esac
done

##############################################################################
# build-qt-static
#   Explanation of configure flags where needed:
#    -no-pch: Disable precompiled headers. Using precompiled improves build
#         times, but it also increases memory usage. This results in a crash
#         when building the project in a github workflow. The precompiled
#         headers can be enabled by passing --use-pch to the script. See
#         --help.
#   -no-gstreamer: Disable gstreamer. We use ffmpeg only.
#   -DFFMPEG_DIR: Path to thel local ffmpeg build.
##############################################################################
build-qt() {
    echo "Downloading Qt sources"

    # if $source_dir exists and is not empty, do not download
    if [ -d "$source_dir" ] && [ "$(ls -A "$source_dir")" ]; then
        echo "$source_dir is not empty. Skipping download."
    else
        mkdir -p "$source_dir"
        "$root/scripts/helpers/download-qt" --root "$source_dir" qt.qt6.661.src
    fi

    local build_type
    if [[ "$1" = "--shared" ]]; then
        echo "Building Qt with shared linking"
        build_type="-shared"
    else
        echo "Building Qt with static linking"
        build_type="-static"
    fi

    mkdir -p "$install_dir"
    export CC=gcc
    export CXX=g++
    src="$source_dir/6.6.1/Src"
    "$src/configure" \
        $build_type \
        -release \
        -prefix "$install_dir" \
        -submodules "$submodules" \
        "$use_pch" \
        -no-gstreamer \
        -- \
        -S "$src" \
        -B "$src/build" \
        -Wdev \
        -DFFMPEG_DIR="$ffmpeg_dir"

    cmake --build "$src/build"
    cmake --install "$src/build"
}

download-qt-shared() {
    echo "Downloading Qt sources with shared linking"
    rm "$source_dir" -rf || true
    rm "$install_dir" -rf || true
    mkdir "$source_dir"
    mkdir "$install_dir"
    "$root/scripts/helpers/download-qt" --root "$source_dir" qt.qt6.661.gcc_64 qt.qt6.661.addons.qtmultimedia
    cp "${source_dir}"/6.6.1/gcc_64/** "$install_dir" -r
}

if [[ "$static" = true ]]; then
    build-qt --static
elif [[ "$shared" = true ]]; then
    download-qt-shared
elif [[ "$shared_build" = true ]]; then
    build-qt --shared
else
    echo "Unknown build type"
    echo "$usage"
    exit 1
fi
