#!/usr/bin/env bash
set -euxo pipefail

this_dir=$(dirname "$(realpath "${BASH_SOURCE:-$0}")")
usage="$(basename "$0") [-h] [-s, --source-dir] [-b, --build-dir] -- Compiles ffmpeg from source

The packages managers \`apt\` and \`pacman\` are supported.

where:
    -h, --help      show this help text
    -s, --source-dir    ffmpeg source directory (default: $HOME/ffmpeg_sources)
    -b, --build-dir     ffmpeg build directory (default: $this_dir/../3rdparty/ffmpeg)"

source_dir="$HOME/ffmpeg_sources"
build_dir="$this_dir/../3rdparty/ffmpeg"
while [[ $# -gt 0 ]]; do
    key="$1"
    case $key in
        -h | --help)
            echo "$usage"
            exit
            ;;
        -s | --source-dir)
            source_dir="$2"
            shift
            shift
            ;;
        -b | --build-dir)
            build_dir="$2"
            shift
            shift
            ;;
        *)
            echo "Unknown option: $key"
            echo "$usage"
            exit 1
            ;;
    esac
done
bin_dir="$build_dir/bin"

install_dependencies() {
    if command -v apt-get &>/dev/null; then
        echo "apt-get found"
        install_dependencies_apt
    elif command -v pacman &>/dev/null; then
        echo "pacman found"
        install_dependencies_pacman
    else
        echo "No supported package manager found"
        exit 1
    fi
}

install_dependencies_apt() {
    echo "Updating apt-get"
    sudo apt-get update -qq
    echo "Installing build tools and dependencies"
    sudo apt-get -y install autoconf automake build-essential cmake git-core libass-dev libfreetype6-dev libgnutls28-dev libmp3lame-dev libsdl2-dev libtool libva-dev libvdpau-dev libvorbis-dev libxcb1-dev libxcb-shm0-dev libxcb-xfixes0-dev meson ninja-build pkg-config texinfo wget yasm zlib1g-dev gnutls-bin libunistring-dev libaom-dev libdav1d-dev tar

    echo "Installing ffmpeg dependencies"
    sudo apt-get -y install nasm libx264-dev libx265-dev libvpx-dev libfdk-aac-dev libopus-dev libdav1d-dev libnuma-dev
}

install_dependencies_pacman() {
    echo "Installing build tools and dependencies"
    sudo pacman -S --noconfirm --needed autoconf automake cmake git libass freetype2 sdl2 libtool libva libvdpau libvorbis libxcb meson ninja pkgconf texinfo wget yasm zlib gnutls libunistring aom dav1d tar

    echo "Installing ffmpeg dependencies"
    sudo pacman -S --noconfirm --needed nasm x264 x265 libvpx fdkaac opus numactl
}

compile_libaom() {
    echo "Compiling libaom"
    cd ~/ffmpeg_sources &&
        git -C aom pull 2>/dev/null || git clone --depth 1 https://aomedia.googlesource.com/aom &&
        mkdir -p aom_build &&
        cd aom_build &&
        PATH="$bin_dir:$PATH" cmake -G "Unix Makefiles" -DCMAKE_INSTALL_PREFIX="$build_dir" -DENABLE_TESTS=OFF -DENABLE_NASM=on ../aom &&
        PATH="$bin_dir:$PATH" make -j"$(nproc)" &&
        make install
}

compile_libsvtav1() {
    echo "Compiling libsvtav1"
    cd ~/ffmpeg_sources &&
        git -C SVT-AV1 pull 2>/dev/null || git clone https://gitlab.com/AOMediaCodec/SVT-AV1.git &&
        mkdir -p SVT-AV1/build &&
        cd SVT-AV1/build &&
        PATH="$bin_dir:$PATH" cmake -G "Unix Makefiles" -DCMAKE_INSTALL_PREFIX="$build_dir" -DCMAKE_BUILD_TYPE=Release -DBUILD_DEC=OFF -DBUILD_SHARED_LIBS=OFF .. &&
        PATH="$bin_dir:$PATH" make -j"$(nproc)" &&
        make install
}

compile_libvmaf() {
    echo "Compiling libvmaf"
    cd ~/ffmpeg_sources &&
        wget https://github.com/Netflix/vmaf/archive/v2.3.1.tar.gz && tar xvf v2.3.1.tar.gz &&
        mkdir -p vmaf-2.3.1/libvmaf/build &&
        cd vmaf-2.3.1/libvmaf/build &&
        meson setup -Denable_tests=false -Denable_docs=false --buildtype=release --default-library=static .. --prefix "$build_dir" --bindir="$bin_dir" --libdir="$build_dir/lib" &&
        ninja &&
        ninja install
}

compile_ffmpeg() {
    echo "Compiling ffmpeg"
    cd ~/ffmpeg_sources &&
        wget -O ffmpeg-snapshot.tar.bz2 https://ffmpeg.org/releases/ffmpeg-snapshot.tar.bz2 &&
        tar xjvf ffmpeg-snapshot.tar.bz2 &&
        cd ffmpeg &&
        PATH="$bin_dir:$PATH" PKG_CONFIG_PATH="$build_dir/lib/pkgconfig" ./configure \
            --pkg-config-flags="--static" \
            --prefix="$build_dir" \
            --extra-cflags="-I$build_dir/include" \
            --extra-ldflags="-L$build_dir/lib" \
            --extra-libs="-lpthread -lm" \
            --ld="g++" \
            --bindir="$bin_dir" \
            --enable-gpl \
            --enable-gnutls \
            --enable-libaom \
            --enable-libass \
            --enable-libfdk-aac \
            --enable-libfreetype \
            --enable-libmp3lame \
            --enable-libopus \
            --enable-libsvtav1 \
            --enable-libdav1d \
            --enable-libvorbis \
            --enable-libvpx \
            --enable-libx264 \
            --enable-libx265 \
            --enable-nonfree &&
        PATH="$bin_dir:$PATH" make -j"$(nproc)" &&
        make install &&
        hash -r
}

dir=$(pwd)

mkdir -p "$source_dir" "$bin_dir"
install_dependencies
compile_libaom
compile_libsvtav1
compile_libvmaf
compile_ffmpeg

cd "$dir"
