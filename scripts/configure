#!/usr/bin/env bash
set -euo pipefail

usage="Usage: $0 
Configures a build of the project. It is assumed that the depedencies are
installed and are discoverable by cmake. The following is the default behavior:
- The generator is Ninja
- The build type is Release
- The build is stored in a folder named build in the root of the project
- The testst are not build (can be enabled with \`-- -DBUILD_TESTING=ON\`)

All arguments after -- are directly appended to cmake.

Additionally, the following is supported by default:
- A custom build of Qt 6.6 may be located at 3rdparty/Qt
- A custom build of ffmpeg may be located at 3rdparty/ffmpeg, where:
    - 3rdparty/ffmpeg/lib contains the shared libraries
    - 3rdparty/ffmpeg/include contains the headers

Options:
    --help      Show this help message
    --clean     Remove the build folder before configuring
    --no-patch  Do not patch FindFFmpeg.cmake to fix a bug in Qt 6.6"

this_dir=$(dirname "$(realpath "${BASH_SOURCE:-$0}")")

root="$this_dir/.."
patch=true
qt_dir="$root/3rdparty/Qt"
ffmpeg_dir="$root/3rdparty/ffmpeg"

clean() {
    echo "Remove old build folder"
    rm "$root/build" -rf || true
}

copy_patched_findffmpeg() {
    echo "Apply patch to fix FindFFmpeg.cmake"
    original="$qt_dir/lib/cmake/Qt6/FindFFmpeg.cmake"
    rm "$original" || true
    cp "$root/cmake/FindFFmpeg_patched.cmake" "$original"
}

configure() {
    echo "Configure build"
    cmake \
        -G "Ninja" \
        -S "$root" \
        -B "$root/build" \
        -DBUILD_TESTING=OFF \
        -DCMAKE_BUILD_TYPE=Release \
        -DFFMPEG_DIR="$ffmpeg_dir" \
        -DCMAKE_PREFIX_PATH="$qt_dir/lib/cmake" \
        "$@"
}

while [[ $# -gt 0 ]]; do
    case "$1" in
        --help)
            echo "$usage"
            exit 0
            ;;
        --clean)
            clean
            shift
            ;;
        --no-patch)
            patch=false
            shift
            ;;
        --)
            shift
            break
            ;;
        *)
            echo "Unknown argument: $1"
            echo "$usage"
            exit 1
            ;;
    esac
done

if [[ -d "$qt_dir/lib/cmake/Qt6" && "$patch" == true ]]; then
    copy_patched_findffmpeg
fi

configure "$@"
